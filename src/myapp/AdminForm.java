/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package myapp;

import config.PasswordHasher;
import config.dbConnector;
import internalPages.deathinfoPage;
import java.awt.Color;
import java.awt.Image;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author User
 */
public class AdminForm extends javax.swing.JFrame {

    /**
     * Creates new form reservationForm
     */
    public AdminForm() {
        initComponents();
    }
    
    private void displayImage(String filePath) {
    ImageIcon imageIcon = new ImageIcon(filePath);
    
    
    Image image = imageIcon.getImage();
    Image scaledImage = image.getScaledInstance(img.getWidth(), img.getHeight(), Image.SCALE_SMOOTH);
    ImageIcon scaledImageIcon = new ImageIcon(scaledImage);
    
    img.setIcon(scaledImageIcon);
}
     private String generateNewFileName(String originalFileName) {
    String extension = "";
    int dotIndex = originalFileName.lastIndexOf('.');
    if (dotIndex > 0 && dotIndex < originalFileName.length() - 1) {
        extension = originalFileName.substring(dotIndex + 1);
    }

    String baseName = originalFileName.substring(0, dotIndex);
    String randomSuffix = String.valueOf(System.currentTimeMillis() % 10000);
    return baseName + "_" + randomSuffix + "." + extension;
}
     private String selectedImagePath;
    
    
public void close(){
this.dispose();
loginform field = new loginform();
field.setVisible(true);
                setVisible(false);
    }
    public int validateRegister (){
      int result;
   if(ad_name.getText().isEmpty() ||ad_ad.getText().isEmpty() || ad_pos.getText().isEmpty() || username.getText().isEmpty() || password.getText().isEmpty()   ){
    result = 0;
   }else{
   result = 1;
   }
    return result;
    }
    
    
  
    
   
   
    Color navcolor = new Color(204,204,255);
    Color headcolor = new Color(153,153,255);
    Color bodycolor = new Color(255,204,255);
    
     
     public String action;
    
    
      public String email, p;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        add = new javax.swing.JPanel();
        rv_label = new javax.swing.JLabel();
        add1 = new javax.swing.JPanel();
        rv_label2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ad_name = new javax.swing.JTextField();
        ad_ad = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ad_pos = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        image = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        img = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        close = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel1.setMinimumSize(new java.awt.Dimension(917, 606));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setPreferredSize(new java.awt.Dimension(917, 606));
        jPanel2.setLayout(null);

        jLabel1.setBackground(new java.awt.Color(255, 204, 204));
        jLabel1.setFont(new java.awt.Font("Lucida Calligraphy", 1, 26)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Admin");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204)));
        jPanel2.add(jLabel1);
        jLabel1.setBounds(0, 20, 710, 60);

        add.setBackground(new java.awt.Color(255, 255, 255));
        add.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addMouseExited(evt);
            }
        });
        add.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rv_label.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        rv_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rv_label.setText("Save");
        rv_label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rv_labelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                rv_labelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                rv_labelMouseExited(evt);
            }
        });
        add.add(rv_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 80, 20));

        jPanel2.add(add);
        add.setBounds(190, 570, 80, 40);

        add1.setBackground(new java.awt.Color(255, 255, 255));
        add1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        add1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                add1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                add1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                add1MouseExited(evt);
            }
        });
        add1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rv_label2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        rv_label2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rv_label2.setText("Back");
        rv_label2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rv_label2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                rv_label2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                rv_label2MouseExited(evt);
            }
        });
        add1.add(rv_label2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 80, 20));

        jPanel2.add(add1);
        add1.setBounds(460, 570, 80, 40);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel7.setText("FullName:");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(30, 110, 76, 40);

        ad_name.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        ad_name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ad_name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel2.add(ad_name);
        ad_name.setBounds(130, 110, 280, 40);

        ad_ad.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        ad_ad.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ad_ad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel2.add(ad_ad);
        ad_ad.setBounds(130, 170, 280, 50);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel2.setText("Address:");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(40, 190, 65, 19);

        ad_pos.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ad_pos.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel2.add(ad_pos);
        ad_pos.setBounds(130, 240, 280, 50);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel13.setText("Position:");
        jPanel2.add(jLabel13);
        jLabel13.setBounds(40, 250, 66, 40);

        image.setText("Choose image");
        image.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageActionPerformed(evt);
            }
        });
        jPanel2.add(image);
        image.setBounds(460, 110, 220, 50);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel14.setText("Username:");
        jPanel2.add(jLabel14);
        jLabel14.setBounds(30, 320, 90, 40);

        username.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        username.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel2.add(username);
        username.setBounds(130, 320, 280, 50);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel15.setText("Password:");
        jPanel2.add(jLabel15);
        jLabel15.setBounds(26, 390, 80, 40);

        password.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        password.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel2.add(password);
        password.setBounds(130, 390, 280, 50);

        img.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                imgAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jPanel2.add(img);
        img.setBounds(460, 180, 220, 170);

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 710, 640));

        minimize.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        minimize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimize.setText("-");
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
        });
        jPanel1.add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 10, 20, -1));

        close.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        close.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        close.setText("x");
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
        });
        jPanel1.add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 10, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconsFolder/There is a Hope and a Purpose Beyond the Broken Places Archives ~ Cups of Hope Cafe.jpg"))); // NOI18N
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 770));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1013, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 769, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseEntered
        add.setBackground(bodycolor);

    }//GEN-LAST:event_addMouseEntered

    private void addMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseExited

        add.setBackground(navcolor);
    }//GEN-LAST:event_addMouseExited

    private void addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseClicked
  

    }//GEN-LAST:event_addMouseClicked

    private void rv_labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rv_labelMouseClicked
     int check = validateRegister();
if (check == 1) {
    String pass;
    try {
        pass = PasswordHasher.hashPassword(password.getText());

        dbConnector dbc = new dbConnector();

        // Retrieve the file path and name
        String filePath = selectedImagePath != null ? selectedImagePath : "";
        File selectedFile = null;
        byte[] fileData = null;

        if (filePath != null && !filePath.isEmpty()) {
            selectedFile = new File(filePath);
            if (selectedFile.exists()) {
                try {
                    fileData = Files.readAllBytes(Paths.get(filePath));
                } catch (IOException e) {
                    System.out.println("Error reading file data: " + e.getMessage());
                }
            } else {
                System.out.println("Selected file does not exist: " + filePath);
            }
        }

        // Check if fileData is null and assign an empty byte array if it is
        if (fileData == null) {
            fileData = new byte[0];
        }

        // Get the filename or use a default value if selectedFile is null
        String filename = selectedFile != null ? selectedFile.getName() : "default.jpg";
        
       

        // Insert the data into the database
        int result = dbc.insertData("INSERT INTO tbl_admin (ad_fullname, ad_address, ad_position, ad_imagepath, ad_imagename, ad_imagefile, username, password) "
                + "VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
                new Object[] { ad_name.getText(), ad_ad.getText(), ad_pos.getText(), filePath,
                        filename, fileData, username.getText(), pass });

        if (result == 1) {
            JOptionPane.showMessageDialog(null, "Successfully Registered!");
            loginform lf = new loginform();
            this.dispose();
            lf.setVisible(true);
        } else {
            System.out.println("Saving Data Failed!");
        }
    } catch (NoSuchAlgorithmException ex) {
        System.out.println("NoSuchAlgorithmException: " + ex.getMessage());
    }
}
    }//GEN-LAST:event_rv_labelMouseClicked


    
    private void rv_labelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rv_labelMouseEntered
        // TODO add your handling code here:
        rv_label.setBackground(bodycolor);
        
    }//GEN-LAST:event_rv_labelMouseEntered

    private void rv_labelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rv_labelMouseExited
        // TODO add your handling code here:
        
        rv_label.setBackground(navcolor);
    }//GEN-LAST:event_rv_labelMouseExited

    private void rv_label2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rv_label2MouseClicked
        close();
    }//GEN-LAST:event_rv_label2MouseClicked

    private void rv_label2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rv_label2MouseEntered
         rv_label2.setBackground(bodycolor);
    }//GEN-LAST:event_rv_label2MouseEntered

    private void rv_label2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rv_label2MouseExited
         rv_label2.setBackground(navcolor);
    }//GEN-LAST:event_rv_label2MouseExited

    private void add1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add1MouseClicked
     close();
    }//GEN-LAST:event_add1MouseClicked

    private void add1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add1MouseEntered
       add1.setBackground(bodycolor);
    }//GEN-LAST:event_add1MouseEntered

    private void add1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add1MouseExited
        add1.setBackground(navcolor);
    }//GEN-LAST:event_add1MouseExited

    private void imageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter("Image Files", "jpg", "jpeg", "png", "gif");
    fileChooser.setFileFilter(filter);
    int returnValue = fileChooser.showOpenDialog(null);
    if (returnValue == JFileChooser.APPROVE_OPTION) {
        File selectedFile = fileChooser.getSelectedFile();
        String filePath = selectedFile.getAbsolutePath();

        // Update the selectedImagePath variable with the file path
        selectedImagePath = filePath;

        // Display the selected image
        displayImage(selectedImagePath);
    }
        
    }//GEN-LAST:event_imageActionPerformed

    private void imgAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_imgAncestorAdded
        // TODO add your handling code here:
        if (selectedImagePath != null) {
            img.setIcon(null);
            
        // Display the image
        displayImage(selectedImagePath);}
        
    }//GEN-LAST:event_imgAncestorAdded

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked

        // TODO add your handling code here:
        int a = JOptionPane.showConfirmDialog(null,"Confirm Exit?");
        if(a == JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_closeMouseClicked

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        // TODO add your handling code here:
        setState(ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField ad_ad;
    public javax.swing.JTextField ad_name;
    public javax.swing.JTextField ad_pos;
    public javax.swing.JPanel add;
    public javax.swing.JPanel add1;
    private javax.swing.JLabel close;
    private javax.swing.JButton image;
    private javax.swing.JLabel img;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel minimize;
    private javax.swing.JPasswordField password;
    public javax.swing.JLabel rv_label;
    public javax.swing.JLabel rv_label2;
    public javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
