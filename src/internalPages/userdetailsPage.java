/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package internalPages;
import config.dbConnector;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.sql.Blob;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.TableModel;
import myapp.AdminForm;
import myapp.UserSessions;
import net.proteanit.sql.DbUtils;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 *
 * @author User
 */
public final class userdetailsPage extends javax.swing.JInternalFrame {

    private int rowlndex;

    /**
     * Creates new form userPage
     */
    public userdetailsPage() {
        initComponents();
        
       
        displayData();
        
        
        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
       BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
       
        
       
        
    }
    private String selectedImagePath;
    private void displayImage(String filePath) {
    try {
        File imageFile = new File(filePath);
        BufferedImage image = ImageIO.read(imageFile);
        
        // Scale the image while preserving its aspect ratio
        int labelWidth = img.getWidth();
        int labelHeight = img.getHeight();
        Image scaledImage = image.getScaledInstance(labelWidth, labelHeight, Image.SCALE_SMOOTH);
        
        ImageIcon scaledImageIcon = new ImageIcon(scaledImage);
        img.setIcon(scaledImageIcon);
    } catch (IOException e) {
        e.printStackTrace();
        // Handle the exception appropriately
    }
}

    
    
    public void displayData(){
try{
dbConnector dbc = new dbConnector();
ResultSet rs = dbc.getData("SELECT* FROM  tbl_admin");

}catch(SQLException ex){
System.out.println("Errors:"+ex.getMessage());

}

}
    
    
    Color navcolor = new Color(204,204,255);
    Color headcolor = new Color(153,153,255);
    Color bodycolor = new Color(255,204,255);

    
    
  
  
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        refresh = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        us_lname = new javax.swing.JTextField();
        us_email = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        img = new javax.swing.JLabel();
        us_fname = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        edit1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        Change_image = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        us_username = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        us_password = new javax.swing.JPasswordField();

        setPreferredSize(new java.awt.Dimension(917, 606));

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel1.setMinimumSize(new java.awt.Dimension(917, 606));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 153, 153));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel2.setPreferredSize(new java.awt.Dimension(917, 606));
        jPanel2.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(255, 153, 153));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Calligraphy", 1, 26)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("USER DETAILS");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 260, 30));

        jPanel2.add(jPanel3);
        jPanel3.setBounds(230, 0, 470, 70);

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 70));

        refresh.setBackground(new java.awt.Color(204, 204, 204));
        refresh.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        refresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refreshMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refreshMouseExited(evt);
            }
        });
        refresh.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Refresh");
        refresh.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 90, 20));

        jPanel1.add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 550, -1, 40));

        jLabel2.setText("Last Name:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 150, -1));

        us_lname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                us_lnameActionPerformed(evt);
            }
        });
        jPanel1.add(us_lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 190, 220, 30));
        jPanel1.add(us_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, 220, 30));

        jLabel3.setText("Email:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, 150, 20));

        jLabel5.setText("First Name:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 210, 20));

        img.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                imgAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jPanel1.add(img, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 150, 300, 220));
        jPanel1.add(us_fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 220, 30));

        jLabel6.setText("Image");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 120, -1, -1));

        edit1.setBackground(new java.awt.Color(204, 204, 204));
        edit1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        edit1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                edit1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                edit1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                edit1MouseExited(evt);
            }
        });
        edit1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setBackground(new java.awt.Color(204, 204, 204));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Edit");
        edit1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 90, 20));

        jPanel1.add(edit1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 550, -1, 40));

        Change_image.setBackground(new java.awt.Color(204, 204, 255));
        Change_image.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        Change_image.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Change_imageMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Change_imageMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Change_imageMouseExited(evt);
            }
        });
        Change_image.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setBackground(new java.awt.Color(204, 204, 204));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Image");
        Change_image.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 90, 20));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Change");
        Change_image.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 90, 20));

        jPanel1.add(Change_image, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 550, -1, 40));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Change");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 90, 20));

        jLabel11.setText("Username:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 280, 150, 20));
        jPanel1.add(us_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, 220, 30));

        jLabel12.setText("Password:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 330, 150, 20));
        jPanel1.add(us_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 350, 220, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshMouseEntered
        
        
        refresh.setBackground(bodycolor);
    }//GEN-LAST:event_refreshMouseEntered

    private void refreshMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshMouseExited
        
        
        refresh.setBackground(navcolor);
    }//GEN-LAST:event_refreshMouseExited

    private void refreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshMouseClicked
            try {
        dbConnector dbc = new dbConnector();
        int userId = UserSessions.getUserId(); 
// Assuming you have the user ID stored in UserSessions

        // Retrieve user information based on the user ID
       ResultSet resultSet = dbc.getData("SELECT * FROM tbl_userinfo WHERE us_id = " + userId);

if (resultSet.next()) {
    // Retrieve the user information from the result set
    String firstName = resultSet.getString("us_fname");
    String lastName = resultSet.getString("us_lname");
    String email = resultSet.getString("us_email");
    String filePath = resultSet.getString("us_filepath");
    String fileName = resultSet.getString("us_filename");
    String fileImage = resultSet.getString("us_fileimage");
    String username = resultSet.getString("us_username");
    String password = resultSet.getString("us_password");
    try {
    // Assuming resultSet contains the retrieved data from the database
    Blob imageBlob = resultSet.getBlob("us_fileimage");
    InputStream inputStream = imageBlob.getBinaryStream();
    Image image = ImageIO.read(inputStream);
    ImageIcon imageIcon = new ImageIcon(image);
    img.setIcon(imageIcon);
} catch (SQLException | IOException e) {
    // Handle the exception here
    e.printStackTrace();
}

    // Set the user information in the text fields
    us_fname.setText(firstName);
    us_lname.setText(lastName);
    us_email.setText(email);
    us_username.setText(username);
    us_password.setText(password);
} else {
    // User information not found
    System.out.println("User information not found!");
}
    // Handle the additional fields as needed

    } catch (SQLException e) {
        e.printStackTrace();
    }
       
    }//GEN-LAST:event_refreshMouseClicked

    private void us_lnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_us_lnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_us_lnameActionPerformed

    private void edit1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit1MouseClicked
        // TODO add your handling code here:
        int userId = UserSessions.getUserId();
        try {
    // Retrieve the updated values from the input components
    String updatedFirstName = us_fname.getText();
    String updatedLastName = us_lname.getText();
    String updatedEmail = us_email.getText();
    String updatedUsername = us_username.getText();
    String updatedPassword = us_password.getText();
    dbConnector dbc = new dbConnector();
    // Retrieve other updated values as needed

    // Construct the SQL update query
    String updateQuery = "UPDATE tbl_userinfo SET us_fname = ?, us_lname = ?, us_email = ?, us_username = ?, us_password = ? WHERE us_id = ?";

    // Create a PreparedStatement and set the parameter values
    PreparedStatement statement = dbc.connect_db().prepareStatement(updateQuery);
    statement.setString(1, updatedFirstName);
    statement.setString(2, updatedLastName);
    statement.setString(3, updatedEmail);
    statement.setString(4, updatedUsername);
    statement.setString(5, updatedPassword);
    statement.setInt(6, userId); // Assuming you have the user ID stored in a variable called userId

    // Execute the update query
    int result = statement.executeUpdate();

    if (result == 1) {
        JOptionPane.showMessageDialog(null, "User information updated successfully!");
    } else {
        JOptionPane.showMessageDialog(null, "Failed to update user information!");
    }
} catch (SQLException e) {
    e.printStackTrace();
}
    }//GEN-LAST:event_edit1MouseClicked

    private void edit1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_edit1MouseEntered

    private void edit1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_edit1MouseExited

    private void Change_imageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Change_imageMouseClicked
        // TODO add your handling code here:
        
        int userId = UserSessions.getUserId();
        dbConnector dbc = new dbConnector();
        JFileChooser fileChooser = new JFileChooser();
    
    // Set the file chooser to only accept image files
    FileNameExtensionFilter filter = new FileNameExtensionFilter("Images", "jpg", "jpeg", "png", "gif");
    fileChooser.setFileFilter(filter);
    
    // Show the file chooser dialog
    int result = fileChooser.showOpenDialog(null);
    
    // Check if a file was selected
    if (result == JFileChooser.APPROVE_OPTION) {
        File selectedFile = fileChooser.getSelectedFile();
        
        try {
            // Read the contents of the selected file
            byte[] fileData = Files.readAllBytes(selectedFile.toPath());
            
            // Update the image in the database
            String updateQuery = "UPDATE tbl_userinfo SET us_fileimage = ? WHERE us_id = ?";
            
            // Create a PreparedStatement and set the parameter values
            PreparedStatement statement = dbc.connect_db().prepareStatement(updateQuery);
            statement.setBytes(1, fileData);
            statement.setInt(2, userId); // Assuming you have the user ID stored in a variable called userId
            
            // Execute the update query
            int updateResult = statement.executeUpdate();
            
            if (updateResult == 1) {
                JOptionPane.showMessageDialog(null, "Image updated successfully!");
            } else {
                JOptionPane.showMessageDialog(null, "Failed to update image!");
            }
        } catch (IOException | SQLException e) {
            e.printStackTrace();
        }
    }
        
        
    }//GEN-LAST:event_Change_imageMouseClicked

    private void Change_imageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Change_imageMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_Change_imageMouseEntered

    private void Change_imageMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Change_imageMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_Change_imageMouseExited

    private void imgAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_imgAncestorAdded
       
    // Load the image from the file
        if (selectedImagePath != null) {
        img.setIcon(null);
            
        // Display the image
        displayImage(selectedImagePath);
    }
    }//GEN-LAST:event_imgAncestorAdded


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Change_image;
    private javax.swing.JPanel edit1;
    private javax.swing.JLabel img;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel refresh;
    private javax.swing.JTextField us_email;
    private javax.swing.JTextField us_fname;
    private javax.swing.JTextField us_lname;
    private javax.swing.JPasswordField us_password;
    private javax.swing.JTextField us_username;
    // End of variables declaration//GEN-END:variables

}